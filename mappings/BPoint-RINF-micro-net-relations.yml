prefixes:
  xsd: "http://www.w3.org/2001/XMLSchema#"
  idlab-fn: "http://example.com/idlab/function/"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"
  rdfs: "http://www.w3.org/2000/01/rdf-schema#"
  eu-country: "http://publications.europa.eu/resource/authority/country/"
  era: "http://data.europa.eu/949/"
  era-nv: "http://data.europa.eu/949/concepts/navigabilities/rinf/"
  era-pos: "http://data.europa.eu/949/concepts/relation-positions/rinf/"

sources:
  xml-in-out-source: ['dataset/internal-node-link-in-out.xml~xpath','/RINFData/netElement']
  xml-no-out-source: ['dataset/internal-node-link-no-out.xml~xpath','/RINFData/netElement']
  xml-no-in-source: ['dataset/internal-node-link-no-in.xml~xpath','/RINFData/netElement']
mappings:

  # ----------------------Define Micro NetRelations for artificial net elements inside OPs---------------------

  net-relations-in-out-1:
    sources:
      - xml-in-out-source
#    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)_$(OUTGOING_LINE)
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)
    po:
      - [a, era:NetRelation]
      - [era:elementA, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)~iri"]
      - [era:elementB, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri"]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NN,NB,BN"]
            - [idlab-fn:str, "1010,1030,3010"] # "NN,NB,BN"="1010,1030,3010" ; N=10,O=20,B=30(in XML)
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "OO,OB,BO"]
            - [idlab-fn:str, "2020,2030,3020"] # "OO,OB,BO"="2020,2030,3020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NO,ON"]
            - [idlab-fn:str, "1020,2010"] # "NO,ON"= "1020,2010"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "BB"]
            - [grel:valueParameter, "3030"] # "BB"= "3030"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "O"]
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "O"]
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
    graph: ${NAMED_GRAPH}

  net-relations-in-out-2:
    sources:
      - xml-in-out-source
#        query: SELECT UICLines2.UICCode AS INCOMING_LINE, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges2.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS INCOMING_REMOTE_OP, Tracks2.UUID AS INCOMING, LookupValues2.[Value] AS INCOMING_DIRECTION, LTRIM(RTRIM(OP2.UOPID)) AS UOPID, Tracks1.UUID AS OUTGOING, LookupValues1.[Value] AS OUTGOING_DIRECTION, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges1.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS OUTGOING_REMOTE_OP, UICLines1.UICCode AS OUTGOING_LINE FROM RINF.dbo.Tracks AS Tracks2, RINF.dbo.SOLTracks AS SOLTracks2, RINF.dbo.SectionOfLines AS SectionOfLines2, RINF.dbo.LookupValues AS LookupValues2, RINF.dbo.UICLines AS UICLines2, RINF.dbo.Tracks AS Tracks1, RINF.dbo.SOLTracks AS SOLTracks1, RINF.dbo.SectionOfLines AS SectionOfLines1, RINF.dbo.LookupValues AS LookupValues1, RINF.dbo.UICLines AS UICLines1, RINF.dbo.LineEdges AS LineEdges2, RINF.dbo.LineEdges AS LineEdges1, RINF.dbo.LineNodes AS LineNodes1, RINF.dbo.LineNodes AS LineNodes2, RINF.dbo.OperationalPoints AS OP1, RINF.dbo.OperationalPoints AS OP2, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE Tracks2.ID = SOLTracks2.TrackID AND Tracks2.VersionID = SOLTracks2.VersionID AND SOLTracks2.Direction = LookupValues2.ID AND SOLTracks2.SectionOfLineID = SectionOfLines2.ID AND SectionOfLines2.UICLineID = UICLines2.ID AND SectionOfLines2.VersionID = UICLines2.VersionID AND SectionOfLines2.LineEdgeID = LineEdges2.ID AND Tracks2.VersionID = LineEdges2.VersionID AND Tracks1.ID = SOLTracks1.TrackID AND Tracks1.VersionID = SOLTracks1.VersionID AND SOLTracks1.Direction = LookupValues1.ID AND SOLTracks1.SectionOfLineID = SectionOfLines1.ID AND SectionOfLines1.UICLineID = UICLines1.ID AND SectionOfLines1.VersionID = UICLines1.VersionID AND SectionOfLines1.LineEdgeID = LineEdges1.ID AND Tracks1.VersionID = LineEdges1.VersionID AND LineEdges2.LineNodeEndID = LineNodes2.ID AND LineEdges2.VersionID = LineNodes2.VersionID AND LineEdges1.LineNodeStartID = LineNodes1.ID AND LineEdges1.VersionID = LineNodes1.VersionID AND LineEdges1.ID != LineEdges2.ID AND LineNodes2.OperationalPointID = OP2.ID AND LineNodes1.OperationalPointID = OP1.ID AND LineNodes2.VersionID = OP2.VersionID AND LineNodes1.VersionID = OP1.VersionID AND SectionOfLines2.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND OP2.UOPID = OP1.UOPID AND OP1.[Type] = LookupValues.ID AND OP2.[Type] = LookupValues.ID AND OP1.UOPID NOT IN ('NLBHV', 'NLBKLA', 'NLBKP', 'NLBLOA', 'NLDB', 'NLDLD', 'NLHMLA', 'NLMAS', 'NLUT', 'NLUTZA', 'NLVTN');
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)_$(OUTGOING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)
    po:
      - [a, era:NetRelation]
      - [era:elementA, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri"]
      - [era:elementB, "http://data.europa.eu/949/topology/netElements/$(OUTGOING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)~iri"]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NN,NB,BN"]
            - [idlab-fn:str, "1010,1030,3010"] # "NN,NB,BN"="1010,1030,3010"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "OO,OB,BO"]
            - [idlab-fn:str, "2020,2030,3020"] # "OO,OB,BO"="2020,2030,3020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NO,ON"]
            - [idlab-fn:str, "1020,2010"] # "1020,2010"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "BB"]
            - [grel:valueParameter, "3030"] # "BB"="3030"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "O"]
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"]  #"N,B"="10,30"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
    graph: ${NAMED_GRAPH}

  net-relations-no-out-1:
    sources:
      - xml-no-out-source
    s: "http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)"
    po:
      - [a, era:NetRelation]
      - [era:elementA, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)~iri"]
      - [era:elementB, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri"]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NO,NB,BO"]
            - [idlab-fn:str, "1020,1030,3020"] # "NO,NB,BO"="1020,1030,3020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "ON,OB,BN"]
            - [idlab-fn:str, "2010,2030,3010"] # ON,OB,BN"="2010,2030,3010"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "NN,OO"]
            - [idlab-fn:str, "1010,2020"] # "NN,OO"="1010,2020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "BB"]
            - [grel:valueParameter, "3030"] #"BB"="3030"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "O"]
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
#            - [grel:valueParameter, "O"]
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
#            - [idlab-fn:str, "N,B"]
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
    graph: ${NAMED_GRAPH}

  net-relations-no-out-2:
      sources:
        - xml-no-out-source
  #        query: SELECT UICLines2.UICCode AS INCOMING_LINE, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges2.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS INCOMING_REMOTE_OP, Tracks2.UUID AS INCOMING, LookupValues2.[Value] AS INCOMING_DIRECTION, LTRIM(RTRIM(OP2.UOPID)) AS UOPID, Tracks1.UUID AS OUTGOING, LookupValues1.[Value] AS OUTGOING_DIRECTION, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges1.LineNodeStartID AND OperationalPoints.VersionID=LineNodes.VersionID) AS OUTGOING_REMOTE_OP, UICLines1.UICCode AS OUTGOING_LINE FROM RINF.dbo.Tracks AS Tracks2, RINF.dbo.SOLTracks AS SOLTracks2, RINF.dbo.SectionOfLines AS SectionOfLines2, RINF.dbo.LookupValues AS LookupValues2, RINF.dbo.UICLines AS UICLines2, RINF.dbo.Tracks AS Tracks1, RINF.dbo.SOLTracks AS SOLTracks1, RINF.dbo.SectionOfLines AS SectionOfLines1, RINF.dbo.LookupValues AS LookupValues1, RINF.dbo.UICLines AS UICLines1, RINF.dbo.LineEdges AS LineEdges2, RINF.dbo.LineEdges AS LineEdges1, RINF.dbo.LineNodes AS LineNodes1, RINF.dbo.LineNodes AS LineNodes2, RINF.dbo.OperationalPoints AS OP1, RINF.dbo.OperationalPoints AS OP2, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE Tracks2.ID = SOLTracks2.TrackID AND Tracks2.VersionID = SOLTracks2.VersionID AND SOLTracks2.Direction = LookupValues2.ID AND SOLTracks2.SectionOfLineID = SectionOfLines2.ID AND SectionOfLines2.UICLineID = UICLines2.ID AND SectionOfLines2.VersionID = UICLines2.VersionID AND SectionOfLines2.LineEdgeID = LineEdges2.ID AND Tracks2.VersionID = LineEdges2.VersionID AND Tracks1.ID = SOLTracks1.TrackID AND SOLTracks1.SectionOfLineID = SectionOfLines1.ID AND SectionOfLines1.UICLineID = UICLines1.ID AND SectionOfLines1.VersionID = UICLines1.VersionID AND SectionOfLines1.LineEdgeID = LineEdges1.ID AND Tracks1.VersionID = LineEdges1.VersionID AND Tracks1.VersionID = SOLTracks1.VersionID AND SOLTracks1.Direction = LookupValues1.ID AND Tracks2.ID != Tracks1.ID AND LineEdges2.LineNodeEndID = LineNodes2.ID AND LineEdges2.VersionID = LineNodes2.VersionID AND LineEdges1.LineNodeEndID = LineNodes1.ID AND LineEdges1.VersionID = LineNodes1.VersionID AND LineNodes2.OperationalPointID = OP2.ID AND LineNodes1.OperationalPointID = OP1.ID AND LineNodes2.VersionID = OP2.VersionID AND LineNodes1.VersionID = OP1.VersionID AND SectionOfLines2.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND OP2.UOPID = OP1.UOPID AND OP1.[Type] = LookupValues.ID AND OP2.[Type] = LookupValues.ID AND OP1.UOPID NOT IN ('NLBHV', 'NLBKLA', 'NLBKP', 'NLBLOA', 'NLDB', 'NLDLD', 'NLHMLA', 'NLMAS', 'NLUT', 'NLUTZA', 'NLVTN')
      s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)_$(OUTGOING_LINE/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING/@Value)_$(UOPID/UniqueOPID/@Value)
      po:
        - [a, era:NetRelation]
        - [era:elementA, http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri]
        - [era:elementB, http://data.europa.eu/949/topology/netElements/$(OUTGOING_LINE/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING/@Value)_$(UOPID/UniqueOPID/@Value)~iri]
        - p: era:navigability
          o: era-nv:AB~iri
          condition:
            function: idlab-fn:stringContainsOtherString
            parameters:
#            - [idlab-fn:str, "NO,NB,BO"]
              - [idlab-fn:str, "1020,1030,3020"] # "NO,NB,BO"="1020,1030,3020"
              - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
              - [idlab-fn:delimiter, ","]
        - p: era:navigability
          o: era-nv:BA~iri
          condition:
            function: idlab-fn:stringContainsOtherString
            parameters:
#            - [idlab-fn:str, "ON,OB,BN"]
              - [idlab-fn:str, "2010,2030,3010"] # "ON,OB,BN"="2010,2030,3010"
              - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
              - [idlab-fn:delimiter, ","]
        - p: era:navigability
          o: era-nv:None~iri
          condition:
            function: idlab-fn:stringContainsOtherString
            parameters:
#            - [idlab-fn:str, "NN,OO"]
              - [idlab-fn:str, "1010,2020"] # "NN,OO"="1010,2020"
              - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
              - [idlab-fn:delimiter, ","]
        - p: era:navigability
          o: era-nv:Both~iri
          condition:
            function: idlab-fn:equal
            parameters:
#            - [grel:valueParameter, "BB"]
              - [grel:valueParameter, "3030"] # "BB"="3030"
              - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
        - p: era:positionOnA
          o: era-pos:Start~iri
          condition:
            function: idlab-fn:equal
            parameters:
#            - [grel:valueParameter, "O"]
              - [grel:valueParameter, "20"] # "O"="20"
              - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
        - p: era:positionOnA
          o: era-pos:End~iri
          condition:
            function: idlab-fn:stringContainsOtherString
            parameters:
#            - [idlab-fn:str, "N,B"]
              - [idlab-fn:str, "10,30"] # "N,B"="10,30"
              - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
              - [idlab-fn:delimiter, ","]
        - p: era:positionOnB
          o: era-pos:Start~iri
          condition:
            function: idlab-fn:equal
            parameters:
#            - [grel:valueParameter, "O"]
              - [grel:valueParameter, "20"] # "O"="20"
              - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
        - p: era:positionOnB
          o: era-pos:End~iri
          condition:
            function: idlab-fn:stringContainsOtherString
            parameters:
#            - [idlab-fn:str, "N,B"]
              - [idlab-fn:str, "10,30"] # "N,B"="10,30"
              - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
              - [idlab-fn:delimiter, ","]
      graph: ${NAMED_GRAPH}

  net-relations-no-in-1:
    sources:
      - xml-no-in-source
#        query: SELECT UICLines2.UICCode AS INCOMING_LINE, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges2.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS INCOMING_REMOTE_OP, Tracks2.UUID AS INCOMING, LookupValues2.[Value] AS INCOMING_DIRECTION, LTRIM(RTRIM(OP2.UOPID)) AS UOPID, Tracks1.UUID AS OUTGOING, LookupValues1.[Value] AS OUTGOING_DIRECTION, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges1.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS OUTGOING_REMOTE_OP, UICLines1.UICCode AS OUTGOING_LINE FROM RINF.dbo.Tracks AS Tracks2, RINF.dbo.SOLTracks AS SOLTracks2, RINF.dbo.SectionOfLines AS SectionOfLines2, RINF.dbo.LookupValues AS LookupValues2, RINF.dbo.UICLines AS UICLines2, RINF.dbo.Tracks AS Tracks1, RINF.dbo.SOLTracks AS SOLTracks1, RINF.dbo.SectionOfLines AS SectionOfLines1, RINF.dbo.LookupValues AS LookupValues1, RINF.dbo.UICLines AS UICLines1, RINF.dbo.LineEdges AS LineEdges2, RINF.dbo.LineEdges AS LineEdges1, RINF.dbo.LineNodes AS LineNodes1, RINF.dbo.LineNodes AS LineNodes2, RINF.dbo.OperationalPoints AS OP1, RINF.dbo.OperationalPoints AS OP2, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE Tracks2.ID = SOLTracks2.TrackID AND Tracks2.VersionID = SOLTracks2.VersionID AND SOLTracks2.Direction = LookupValues2.ID AND SOLTracks2.SectionOfLineID = SectionOfLines2.ID AND SectionOfLines2.UICLineID = UICLines2.ID AND SectionOfLines2.VersionID = UICLines2.VersionID AND SectionOfLines2.LineEdgeID = LineEdges2.ID AND Tracks2.VersionID = LineEdges2.VersionID AND Tracks1.ID = SOLTracks1.TrackID AND Tracks1.VersionID = SOLTracks1.VersionID AND SOLTracks1.Direction = LookupValues1.ID AND SOLTracks1.SectionOfLineID = SectionOfLines1.ID AND SectionOfLines1.UICLineID = UICLines1.ID AND SectionOfLines1.VersionID = UICLines1.VersionID AND SectionOfLines1.LineEdgeID = LineEdges1.ID AND Tracks1.VersionID = LineEdges1.VersionID AND Tracks2.ID != Tracks1.ID AND LineEdges2.LineNodeStartID = LineNodes2.ID AND LineEdges2.VersionID = LineNodes2.VersionID AND LineEdges1.LineNodeStartID = LineNodes1.ID AND LineEdges1.VersionID = LineNodes1.VersionID AND LineNodes2.OperationalPointID = OP2.ID AND LineNodes1.OperationalPointID = OP1.ID AND LineNodes2.VersionID = OP2.VersionID AND LineNodes1.VersionID = OP1.VersionID AND SectionOfLines2.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND OP2.UOPID = OP1.UOPID AND OP1.[Type] = LookupValues.ID AND OP2.[Type] = LookupValues.ID AND OP1.UOPID NOT IN ('NLBHV', 'NLBKLA', 'NLBKP', 'NLBLOA', 'NLDB', 'NLDLD', 'NLHMLA', 'NLMAS', 'NLUT', 'NLUTZA', 'NLVTN')
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(INCOMING/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)
    po:
      - [a, era:NetRelation]
      - [era:elementA, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(INCOMING/@Value)_$(INCOMING_REMOTE_OP/@Value)~iri"]
      - [era:elementB, "http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri"]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "2010,3010,2030"]  # "ON,BN,OB"="2010,3010,2030"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "1020,3020,1030"] # "NO,BO,NB"="1020,3020,1030"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "1010,2020"] # "NN,OO"="1010,2020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "3030"] # "BB"="3030"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "10,30"]  # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
    graph: ${NAMED_GRAPH}

  net-relations-no-in-2:
    sources:
      - xml-no-in-source
#        query: SELECT UICLines2.UICCode AS INCOMING_LINE, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges2.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS INCOMING_REMOTE_OP, Tracks2.UUID AS INCOMING, LookupValues2.[Value] AS INCOMING_DIRECTION, LTRIM(RTRIM(OP2.UOPID)) AS UOPID, Tracks1.UUID AS OUTGOING, LookupValues1.[Value] AS OUTGOING_DIRECTION, (SELECT LTRIM(RTRIM(UOPID)) FROM RINF.dbo.OperationalPoints, RINF.dbo.LineNodes WHERE LineNodes.OperationalPointID = OperationalPoints.ID AND LineNodes.ID = LineEdges1.LineNodeEndID AND OperationalPoints.VersionID=LineNodes.VersionID) AS OUTGOING_REMOTE_OP, UICLines1.UICCode AS OUTGOING_LINE FROM RINF.dbo.Tracks AS Tracks2, RINF.dbo.SOLTracks AS SOLTracks2, RINF.dbo.SectionOfLines AS SectionOfLines2, RINF.dbo.LookupValues AS LookupValues2, RINF.dbo.UICLines AS UICLines2, RINF.dbo.Tracks AS Tracks1, RINF.dbo.SOLTracks AS SOLTracks1, RINF.dbo.SectionOfLines AS SectionOfLines1, RINF.dbo.LookupValues AS LookupValues1, RINF.dbo.UICLines AS UICLines1, RINF.dbo.LineEdges AS LineEdges2, RINF.dbo.LineEdges AS LineEdges1, RINF.dbo.LineNodes AS LineNodes1, RINF.dbo.LineNodes AS LineNodes2, RINF.dbo.OperationalPoints AS OP1, RINF.dbo.OperationalPoints AS OP2, RINF.dbo.LookupValues, RINF.dbo.MemberStateVersions, RINF.dbo.MemberStates WHERE Tracks2.ID = SOLTracks2.TrackID AND Tracks2.VersionID = SOLTracks2.VersionID AND SOLTracks2.Direction = LookupValues2.ID AND SOLTracks2.SectionOfLineID = SectionOfLines2.ID AND SectionOfLines2.UICLineID = UICLines2.ID AND SectionOfLines2.VersionID = UICLines2.VersionID AND SectionOfLines2.LineEdgeID = LineEdges2.ID AND Tracks2.VersionID = LineEdges2.VersionID AND Tracks1.ID = SOLTracks1.TrackID AND Tracks1.VersionID = SOLTracks1.VersionID AND SOLTracks1.Direction = LookupValues1.ID AND SOLTracks1.SectionOfLineID = SectionOfLines1.ID AND SectionOfLines1.UICLineID = UICLines1.ID AND SectionOfLines1.VersionID = UICLines1.VersionID AND SectionOfLines1.LineEdgeID = LineEdges1.ID AND Tracks1.VersionID = LineEdges1.VersionID AND Tracks2.ID != Tracks1.ID AND LineEdges2.LineNodeStartID = LineNodes2.ID AND LineEdges2.VersionID = LineNodes2.VersionID AND LineEdges1.LineNodeStartID = LineNodes1.ID AND LineEdges1.VersionID = LineNodes1.VersionID AND LineNodes2.OperationalPointID = OP2.ID AND LineNodes1.OperationalPointID = OP1.ID AND LineNodes2.VersionID = OP2.VersionID AND LineNodes1.VersionID = OP1.VersionID AND SectionOfLines2.VersionID = MemberStateVersions.ID AND MemberStateVersions.MemberStateID = MemberStates.ID AND OP2.UOPID = OP1.UOPID AND OP1.[Type] = LookupValues.ID AND OP2.[Type] = LookupValues.ID AND OP1.UOPID NOT IN ('NLBHV', 'NLBKLA', 'NLBKP', 'NLBLOA', 'NLDB', 'NLDLD', 'NLHMLA', 'NLMAS', 'NLUT', 'NLUTZA', 'NLVTN')
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)_$(OUTGOING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)
    po:
      - [a, era:NetRelation]
      - [era:elementA, http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE/@Value)_$(INCOMING_REMOTE_OP/@Value)_$(INCOMING/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)_$(OUTGOING_LINE/@Value)~iri]
      - [era:elementB, http://data.europa.eu/949/topology/netElements/$(OUTGOING_LINE/@Value)_$(UOPID/UniqueOPID/@Value)_$(OUTGOING/@Value)_$(OUTGOING_REMOTE_OP/@Value)~iri]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "2010,3010,2030"] # "ON,BN,OB"="2010,3010,2030"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "1020,3020,1030"] # "NO,BO,NB"="1020,3020,1030"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "1010,2020"] # "NN,OO"="1010,2020"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "3030"] # "BB"="3030"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)$(OUTGOING_DIRECTION/@Value)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(INCOMING_DIRECTION/@Value)"]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "10,30"] # "N,B"="10,30"
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION/@Value)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "20"] # "O"="20"
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION/@Value)"]
    graph: ${NAMED_GRAPH}


  # ----------------------Define Micro NetRelations for real net elements inside OPs---------------------

  net-relations-connectivity-table-1:
    sources:
      - ["data/op_internal_connectivity.csv~csv"]
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)_$(OUTGOING_LINE)
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Connected)]
        - [grel:valueParameter2, "YES"]
    po:
      - [a, era:NetRelation]
      - [era:elementA, http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)~iri]
      - [era:elementB, http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)_$(OUTGOING_LINE)~iri]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "NN,NB,BN"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "OO,OB,BO"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "NO,ON"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "BB"]
            - [grel:valueParameter2, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "O"]
            - [grel:valueParameter2, "$(INCOMING_DIRECTION)"]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "N,B"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "N,B"]
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "O"]
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION)"]
    graph: ${NAMED_GRAPH}

  net-relations-connectivity-table-2:
    sources:
      - ["data/op_internal_connectivity.csv~csv"]
    s: http://data.europa.eu/949/topology/netRelations/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)_$(OUTGOING_LINE)_$(OUTGOING_LINE)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)
    condition:
      function: idlab-fn:equal
      parameters:
        - [grel:valueParameter, $(Connected)]
        - [grel:valueParameter2, "YES"]
    po:
      - [a, era:NetRelation]
      - [era:elementA, http://data.europa.eu/949/topology/netElements/$(INCOMING_LINE)_$(INCOMING_REMOTE_OP)_$(INCOMING)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)_$(OUTGOING_LINE)~iri]
      - [era:elementB, http://data.europa.eu/949/topology/netElements/$(OUTGOING_LINE)_$(UOPID)_$(OUTGOING)_$(OUTGOING_REMOTE_OP)~iri]
      - p: era:navigability
        o: era-nv:AB~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "NN,NB,BN"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:BA~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "OO,OB,BO"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:None~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "NO,ON"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:navigability
        o: era-nv:Both~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "BB"]
            - [grel:valueParameter2, "$(INCOMING_DIRECTION)$(OUTGOING_DIRECTION)"]
      - p: era:positionOnA
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "O"]
            - [grel:valueParameter2, "$(INCOMING_DIRECTION)"]
      - p: era:positionOnA
        o: era-pos:End~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "N,B"]
            - [idlab-fn:otherStr, "$(INCOMING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:Start~iri
        condition:
          function: idlab-fn:stringContainsOtherString
          parameters:
            - [idlab-fn:str, "N,B"]
            - [idlab-fn:otherStr, "$(OUTGOING_DIRECTION)"]
            - [idlab-fn:delimiter, ","]
      - p: era:positionOnB
        o: era-pos:End~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, "O"]
            - [grel:valueParameter2, "$(OUTGOING_DIRECTION)"]
    graph: ${NAMED_GRAPH}